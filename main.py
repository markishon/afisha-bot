import requests
from bs4 import BeautifulSoup
from datetime import datetime
import pytz
import schedule
import time
from telegram import Bot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Telegram
TELEGRAM_TOKEN = '7713528429:AAFOHgwcRkHoihZRLl_a7FLknA7ifjYXLqA'  # –í–∞—à —Ç–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
CHAT_ID = '@smolotka14'  # ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞

# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –Ø–∫—É—Ç—Å–∫–∞
yakutsk_tz = pytz.timezone('Asia/Yakutsk')


# –§—É–Ω–∫—Ü–∏–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞
def parse_cinema_asiakino():
    url = 'http://asiakino.ru/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'lxml')

    films = []
    for film in soup.select('.film'):
        title = film.select_one('.film-title').text
        tags = [tag.text for tag in film.select('.film-genre')]
        showtimes = [showtime.text for showtime in film.select('.showtime')]
        films.append({
            'title': title,
            'tags': tags,
            'showtimes': showtimes,
            'hall': None,
            'price': None
        })
    return '–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä "–ê–∑–∏—è"', films


def parse_cinema_lena():
    url = 'https://cinemalena.com/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'lxml')

    films = []
    for film in soup.select('.film-item'):
        title = film.select_one('.film-title').text
        tags = [tag.text for tag in film.select('.film-tags span')]
        showtimes = [showtime.text for showtime in film.select('.film-showtimes span')]
        price = film.select_one('.film-price').text if film.select_one('.film-price') else None
        hall = film.select_one('.film-hall').text if film.select_one('.film-hall') else None
        films.append({
            'title': title,
            'tags': tags,
            'showtimes': showtimes,
            'hall': hall,
            'price': price
        })
    return '–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä "–õ–µ–Ω–∞"', films


def parse_cinema_center():
    url = 'https://cinema-center.ru/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'lxml')

    films = []
    for film in soup.select('.movie-item'):
        title = film.select_one('.movie-title').text
        tags = [tag.text for tag in film.select('.movie-genres span')]
        showtimes = [showtime.text for showtime in film.select('.movie-showtimes span')]
        price = film.select_one('.movie-price').text if film.select_one('.movie-price') else None
        hall = film.select_one('.movie-hall').text if film.select_one('.movie-hall') else None
        films.append({
            'title': title,
            'tags': tags,
            'showtimes': showtimes,
            'hall': hall,
            'price': price
        })
    return '–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä "–°–∏–Ω–µ–º–∞-–¶–µ–Ω—Ç—Ä"', films


def parse_cinema_emeyan():
    url = 'https://emeyan.ru/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'lxml')

    films = []
    for film in soup.select('.event'):
        title = film.select_one('.event-title').text
        tags = [tag.text for tag in film.select('.event-tags span')]
        showtimes = [showtime.text for showtime in film.select('.event-showtimes span')]
        price = film.select_one('.event-price').text if film.select_one('.event-price') else None
        hall = film.select_one('.event-hall').text if film.select_one('.event-hall') else None
        films.append({
            'title': title,
            'tags': tags,
            'showtimes': showtimes,
            'hall': hall,
            'price': price
        })
    return '–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä "–ï–º–µ—è–Ω"', films


def parse_cinema_aviator():
    url = 'https://kinowidget.kinoplan.ru/'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'lxml')

    films = []
    for film in soup.select('.session-item'):
        title = film.select_one('.session-title').text
        tags = [tag.text for tag in film.select('.session-genres span')]
        showtimes = [showtime.text for showtime in film.select('.session-times span')]
        price = film.select_one('.session-price').text if film.select_one('.session-price') else None
        hall = film.select_one('.session-hall').text if film.select_one('.session-hall') else None
        films.append({
            'title': title,
            'tags': tags,
            'showtimes': showtimes,
            'hall': hall,
            'price': price
        })
    return '–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä "–ê–≤–∏–∞—Ç–æ—Ä"', films


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
def send_message(bot, text):
    bot.send_message(chat_id=CHAT_ID, text=text)


# –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
def prepare_message(cinema_name, films):
    today = datetime.now(yakutsk_tz).strftime("%d.%m.%Y")
    message = f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {today} –≤ {cinema_name}:\n\n"
    for film in films:
        message += f"üé¨ {film['title']}\n"
        message += f"–¢–µ–≥–∏: {', '.join(film['tags'])}\n"
        message += f"–í—Ä–µ–º—è —Å–µ–∞–Ω—Å–æ–≤: {', '.join(film['showtimes'])}\n"
        if film.get('price'):
            message += f"–¶–µ–Ω–∞: {film['price']}\n"
        if film.get('hall'):
            message += f"–ó–∞–ª: {film['hall']}\n"
        message += "\n"
    return message


# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ —Å–æ –≤—Å–µ—Ö –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
def main():
    bot = Bot(token=TELEGRAM_TOKEN)

    # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ —Å –∫–∞–∂–¥–æ–≥–æ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞
    cinemas = [
        parse_cinema_asiakino,
        parse_cinema_lena,
        parse_cinema_center,
        parse_cinema_emeyan,
        parse_cinema_aviator
    ]

    for cinema_parser in cinemas:
        cinema_name, films = cinema_parser()
        message = prepare_message(cinema_name, films)
        send_message(bot, message)


# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 8:00 –ø–æ —è–∫—É—Ç—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏)
def job():
    now = datetime.now(yakutsk_tz)
    if now.hour == 8:
        main()


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
schedule.every().day.at("08:00").do(job)

# –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á
if _name_ == "_main_":
    while True:
        schedule.run_pending()
        time.sleep(60)